-- This script was generated by the Schema Diff utility in pgAdmin 4
-- For the circular dependencies, the order in which Schema Diff writes the objects is not very sophisticated
-- and may require manual changes to the script to ensure changes are applied in the correct order.
-- Please report an issue for any failure with the reproduction steps.

CREATE TABLE IF NOT EXISTS public.counter_events
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    created_at timestamp with time zone NOT NULL DEFAULT now(),
    counter_id bigint NOT NULL,
    CONSTRAINT counter_events_pkey PRIMARY KEY (id),
    CONSTRAINT counter_events_counter_id_fkey FOREIGN KEY (counter_id)
        REFERENCES public.counters (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)

TABLESPACE pg_default;

ALTER TABLE IF EXISTS public.counter_events
    OWNER to postgres;

ALTER TABLE IF EXISTS public.counter_events
    ENABLE ROW LEVEL SECURITY;

GRANT ALL ON TABLE public.counter_events TO anon;

GRANT ALL ON TABLE public.counter_events TO authenticated;

GRANT ALL ON TABLE public.counter_events TO postgres;

GRANT ALL ON TABLE public.counter_events TO service_role;
CREATE POLICY "Enable insert for users based on counter_id"
    ON public.counter_events
    AS PERMISSIVE
    FOR INSERT
    TO authenticated
    WITH CHECK ((auth.uid() = ( SELECT c.user_id
   FROM counters c
  WHERE (c.id = counter_events.counter_id))));

CREATE OR REPLACE VIEW public.view_counters
 AS
 SELECT c.id,
    c.created_at,
    c.updated_at,
    c.name,
    c.user_id,
    count(e.id) AS count
   FROM counters c
     LEFT JOIN counter_events e ON e.counter_id = c.id
  GROUP BY c.id, c.name, c.created_at, c.updated_at, c.user_id;

ALTER TABLE public.view_counters
    OWNER TO postgres;

GRANT ALL ON TABLE public.view_counters TO authenticated;
GRANT ALL ON TABLE public.view_counters TO postgres;
GRANT ALL ON TABLE public.view_counters TO anon;
GRANT ALL ON TABLE public.view_counters TO service_role;
